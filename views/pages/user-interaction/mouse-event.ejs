<html lang="en"></html>
      <head>
        <meta charset="UTF-8">
        <title>Three JS</title>
        <%- include ('../../partials/head') %>
      </head>
    <body>
        <%- include ('../../partials/navbar') %>
        <div class="instructions">
            Click on the shapes to change their color or outside to reset
        </div>
        <canvas id="sceneCanvas"></canvas>
    </body>
    <footer>
        <%- include ('../../partials/footer') %>
    </footer>
</html>

<script>
    let scene, camera, renderer, light1, light2, rayCast, mouse;
    let sphere, cube;

    let onMouseClick = function(e) {
        mouse.x = (e.clientX / window.innerWidth) * 2 - 1;// convert coordinate: -1 to 1
        mouse.y = - (e.clientY / window.innerHeight) * 2 + 1;
        mouse.z = 1;

        rayCast.setFromCamera(mouse, camera);//cast of the ray
    };

    let createGeometry = function() {
        let geometry = new THREE.SphereGeometry(5, 30, 30);
        let material = new THREE.MeshPhongMaterial({color: 0X0450fb,
                                    shininess: 100, side: THREE.DoubleSide});
        sphere = new THREE.Mesh(geometry, material);

        geometry = new THREE.BoxGeometry(5, 5, 5);
        material = new THREE.MeshPhongMaterial({color: 0xff4500,
                                                 shininess: 100, side: THREE.DoubleSide});
        cube = new THREE.Mesh(geometry, material);

        sphere.position.set(1, 4, -10);
        scene.add(sphere);
        scene.add(cube);

    };

    // set up the environment -
    // initiallize scene, camera, objects and renderer
    let init = function() {
        // create the scene
        scene = new THREE.Scene();
        scene.background = new THREE.Color(0xffffff);

        // create an locate the camera

        camera = new THREE.PerspectiveCamera(75,
                        window.innerWidth / window.innerHeight,
                        1, 1000);


        camera.position.set(0, 10, 40);

        light1 = new THREE.DirectionalLight(0xffffff, 1);
        light2 = new THREE.DirectionalLight(0xffffff, 1);
        light2.position.set(0, -5, 2);
        scene.add(light1);
        scene.add(light2);

        createGeometry();

        //Raycast: convert original coordinate to raycast coordinates
        rayCast = new THREE.Raycaster();
        mouse = new THREE.Vector2();//X, Y
        mouse.x = mouse.y = -1;

        // create the renderer
        renderer = new THREE.WebGLRenderer( { canvas: sceneCanvas } );
        renderer.setSize(window.innerWidth, window.innerHeight-100);
        document.addEventListener("click", onMouseClick, false);
    };

    // main animation loop - calls 50-60 times per second.
    let mainLoop = function() {
        sphere.material.color.set(0X0450fb);
        cube.material.color.set(0xff4500);

        let intersects = rayCast.intersectObjects(scene.children);
        intersects.forEach(obj => obj.object.material.color.set(0x00ff00));

        renderer.render(scene, camera);
        requestAnimationFrame(mainLoop);
    };

    ///////////////////////////////////////////////
    init();
    mainLoop();
</script>
