<html lang="en"></html>
      <head>
        <meta charset="UTF-8">
        <title>Three JS</title>
        <%- include ('../../partials/head') %>
      </head>
    <body>
        <%- include ('../../partials/navbar') %>
        <div class="instructions">
            Move your mouse on the spheres to make them move up
        </div>
        <canvas id="sceneCanvas"></canvas>
    </body>
    <footer>
        <%- include ('../../partials/footer') %>
    </footer>
</html>

<script>
    let scene, camera, renderer, light1, rayCast, mouse;
    let spheres = [];
    let ADD = 0.01, theta = 0;
    const RADIUS = 5, BASE_X = -20, BASE_Y = -20;

    let onMouseMove = function(e) {
        mouse.x = (e.clientX / window.innerWidth) * 2 - 1;
        mouse.y = - (e.clientY / window.innerHeight) * 2 + 1;

        rayCast.setFromCamera(mouse, camera);
        //intersectObjects: The object to check for intersection with the ray
        let intersects = rayCast.intersectObjects(scene.children);
        intersects.forEach(obj => obj.object.position.y += 1);//change the position of the object
    };

    let createSphere = function(pos) {
        console.log(pos);
        let material = new THREE.MeshPhongMaterial({color: 0X4a57fa,
                                    shininess: 100, side: THREE.DoubleSide});
        let geometry = new THREE.SphereGeometry(RADIUS, 30, 30);
        let sphere = new THREE.Mesh(geometry, material);
        sphere.position.set(pos.x, pos.y, pos.z);
        scene.add(sphere);
    };

    let createGeometry = function() {
        let material = new THREE.MeshPhongMaterial({color: 0X0450fb,
                                    shininess: 100, side: THREE.DoubleSide});
        for(let i = 0; i < 4; i++)
            for(let j = 0; j < 4; j++) {
                let geometry = new THREE.SphereGeometry(RADIUS, 30, 30);
                let sphere = new THREE.Mesh(geometry, material);
                sphere.position.x = BASE_X + j * 2 * (RADIUS+0.5);
                sphere.position.z = -2*RADIUS * i;
                sphere.position.y = BASE_Y + i * RADIUS;
                scene.add(sphere);
            }
    };

    // set up the environment -
    // initiallize scene, camera, objects and renderer
    let init = function() {
        // create the scene
        scene = new THREE.Scene();
        scene.background = new THREE.Color(0xffffff);

        // create an locate the camera

        camera = new THREE.PerspectiveCamera(75,
                        window.innerWidth / window.innerHeight,
                        1, 1000);


        camera.position.set(0, 0, 40);

        light1 = new THREE.DirectionalLight(0xffffff, 1);

        scene.add(light1);

        createGeometry();

        //RAYCAST
        rayCast = new THREE.Raycaster();
        mouse = new THREE.Vector2();
        mouse.x = mouse.y = -1;

        // create the renderer
        renderer = new THREE.WebGLRenderer( { canvas: sceneCanvas } );
        renderer.setSize(window.innerWidth, window.innerHeight-100);
        document.addEventListener("mousemove", onMouseMove, false);
    };

   // main animation loop - calls 50-60 times per second.
   let mainLoop = function() {
        renderer.render(scene, camera);
        requestAnimationFrame(mainLoop);
    };

    ///////////////////////////////////////////////
    init();
    mainLoop();
</script>
