<html lang="en"></html>
      <head>
        <meta charset="UTF-8">
        <title>Three JS</title>
        <%- include ('../../partials/head') %>
      </head>
    <body>
        <%- include ('../../partials/navbar') %>
        <div class="instructions">
            MeshNormalMaterial
        </div>
        <canvas id="sceneCanvas"></canvas>
    </body>
    <footer>
        <%- include ('../../partials/footer') %>
    </footer>
</html>

<script>
    //MeshNormalMaterial
    /*A material that maps the normal vectors to RGB colors.*/
    let scene, camera, renderer, cube, sphere, torus;
    let ADD = 0.02;
    let createGeometry = function() {
        let geometry1 = new THREE.BoxGeometry(5, 5, 5);
        let geometry2 = new THREE.SphereGeometry(5, 30, 30);
        let geometry3 = new THREE.TorusGeometry(5, 2, 10, 12);

        let material = new THREE.MeshNormalMaterial();//assign a different color on each face

        cube = new THREE.Mesh(geometry1, material);
        sphere = new THREE.Mesh(geometry2, material);
        torus = new THREE.Mesh(geometry3, material);

        cube.position.x = -15;
        sphere.position.x = 0;
        torus.position.x = 15;

        scene.add(cube);
        scene.add(sphere);
        scene.add(torus);
   };

    // set up the environment -
    // initiallize scene, camera, objects and renderer
    let init = function() {
        // create the scene
        scene = new THREE.Scene();
        scene.background = new THREE.Color(0xffffff);

        // create an locate the camera
        camera = new THREE.PerspectiveCamera(75,
                        window.innerWidth / window.innerHeight,
                        1, 1000);
        camera.position.z = 20;

        createGeometry();

        // create the renderer
        renderer = new THREE.WebGLRenderer( { canvas: sceneCanvas } );
        renderer.setSize(window.innerWidth, window.innerHeight-100);
    };

    // main animation loop - calls 50-60 times per second.
    let mainLoop = function() {
        torus.rotation.x += ADD;
        torus.rotation.y += ADD;
        cube.rotation.x += ADD;
        cube.rotation.y += ADD;
        sphere.rotation.x += ADD;
        sphere.rotation.y += ADD;
        renderer.render(scene, camera);
        requestAnimationFrame(mainLoop);
    };

    ///////////////////////////////////////////////
    init();
    mainLoop();
</script>
