<html lang="en"></html>
      <head>
        <meta charset="UTF-8">
        <title>Three JS</title>
        <%- include ('../partials/head') %>
      </head>
    <body>
        <%- include ('../partials/navbar') %>
        <canvas id="sceneCanvas"></canvas>
  </div>
    </body>
    <footer>
        <%- include ('../partials/footer') %>
    </footer>
</html>

<script>
    let scene, camera, renderer, text;
    let ADD = 0.01, theta = 0;
    init();
    addSphere();

    // set up the environment -
    // initiallize scene, camera, objects and renderer
    function init () {
      // create the scene
      scene = new THREE.Scene();
      scene.background = new THREE.Color(0x000000);

      // create an locate the camera
      camera = new THREE.PerspectiveCamera(70,
        window.innerWidth / window.innerHeight,
        1, 150);
      camera.position.set(0, 5, 40);

      //Load font. and create material (async)
      let loader = new THREE.FontLoader();
      let titles = "99 bottles of beer on the wall,\n99 bottles of beer.\nTake one down, pass it around,\n98 bottles of beer on the wall,\n98 bottles of beer.\nTake one down, pass it around,\n97 bottles of beer on the wall,\n97 bottles of beer.\nTake one down, pass it around,\n96 bottles of beer on the wall,\n96 bottles of beer.\nTake one down, pass it around,\n95 bottles of beer on the wall,\n95 bottles of beer.";
      loader.load( 'public/fonts/helvetiker_bold.typeface.json', function ( font ) {
        let geometry = new THREE.TextGeometry(
          titles, {font: font, size: 3, height: 0.1}
        );
        let  material = new THREE.MeshBasicMaterial({color:0xffffff, wireframe: false});
        let  text = new THREE.Mesh(geometry , material);
        text.position.x = -30;
        text.rotation.x = -0.9;
        scene.add(text);

        // main animation loop - calls 50-60 times per second.
        function animate() {
          requestAnimationFrame( animate );
          //text.rotation.x += ADD;
          text.position.z -= ADD;
          text.position.y += ADD / 2;
          renderer.render( scene, camera );
        }
        animate();
      })


      // create the renderer
      renderer = new THREE.WebGLRenderer( { canvas: sceneCanvas } );
      renderer.setSize(window.innerWidth, window.innerHeight-100);
    };//\init

    ///////////////////////////////////////////////

</script>
